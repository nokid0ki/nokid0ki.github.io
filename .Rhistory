if (read %in% c("sf", "rgdal") & requireNamespace("sf", quietly = TRUE)) {
geom_str <- str_replace(str_replace(str_replace(output[[1]][["geojson"]], 'coordinates', '"coordinates"'), 'type', '"type"'), 'MultiPolygon', '"MultiPolygon"')
output <- bind_cols(name = output[[1]][["pln_area_n"]], sf::st_read(geom_str, quiet = TRUE))
sf::st_geometry(output) <- output$geometry
if (read == "rgdal") {
output <- sf::as_Spatial(output)
}
} else if (read != "tibble") {
warning(paste0("Failed to read geojson. Please ensure you have package ", read, " installed.
Only packages sf and rgdal (for sp) are supported currently."))
}
return(output)
}
get_planning_polygon("eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-CA")
get_planning_polygon()
get_planning_polygon(token="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-CA")
get_planning_polygon(token="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-CA",lat=NULL,lon = NULL,year=NULL)
get_planning_polygon(token="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-CA",lat=1.429443081,lon = 103.835005,year=NULL)
install.packages("onemapsgapi")
library(onemapsgapi)
polygon2 <- as.data.frame(polygon)
glimpse(polygon2)
get_planning_areas("eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-C", 2014, read = "sf")
polygon$SearchResults
test <- polygon$SearchResults
test
geojson$polygon$SearchResults
pln_area_n$polygon$SearchResults
pln_area_n$SearchResults
test <- polygon$SearchResults
test
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
base_url <- "https://developers.onemap.sg"
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
query = list(
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-C"
)
planning_areas <- GET(url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
library(geojsonsf)
library(geojsonsf)
base_url <- "https://developers.onemap.sg"
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
query = list(
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-C"
)
planning_areas <- GET(url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
library(geojsonsf)
base_url <- "https://developers.onemap.sg"
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
query = list(
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-C"
)
planning_areas <- GET(url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
library(geojsonsf)
base_url <- "https://developers.onemap.sg"
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
query = list(
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-C"
)
planning_areas <- GET(url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "niki.hartono@u.nus.edu",
password = "Marchandapril2023")
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "niki.hartono@u.nus.edu",
password = "Marchandapril2023")
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
library(geojsonsf)
base_url <- "https://developers.onemap.sg"
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
query = list(
token = token
)
planning_areas <- GET(url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
knitr::opts_chunk$set(echo = TRUE)
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "niki.hartono@u.nus.edu",
password = "Marchandapril2023")
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
library(jsonlite)
library(dplyr)
library(onemapsgapi)
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "niki.hartono@u.nus.edu",
password = "Marchandapril2023")
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
library(jsonlite)
library(dplyr)
library(onemapsgapi)
library(httr)
library(jsonlite)
library(tidyverse)
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "niki.hartono@u.nus.edu",
password = "Marchandapril2023")
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
url <- paste0(base_url, "/privateapi/popapi/getEconomicStatus") #list of available options at https://docs.onemap.sg/#population-query
query = list(
token = token,
planningArea = "MARINE PARADE",
year = 2015
)
data <- GET(url, query = query, verbose()) %>% content()
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(
token = token
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "niki.hartono@u.nus.edu",
password = "Marchandapril2023")
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
url <- paste0(base_url, "/privateapi/popapi/getEconomicStatus") #list of available options at https://docs.onemap.sg/#population-query
query = list(
token = token,
planningArea = "MARINE PARADE",
year = 2015
)
data <- GET(url, query = query, verbose()) %>% content()
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(
token = token
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(token = token)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
url <- paste0(base_url, "/privateapi/popapi/getEconomicStatus") #list of available options at https://docs.onemap.sg/#population-query
query = list(
token = token,
planningArea = "MARINE PARADE",
year = 2015
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
url <- paste0(base_url, "/privateapi/popapi/getEconomicStatus") #list of available options at https://docs.onemap.sg/#population-query
query = list(
token = token,
planningArea = "MARINE PARADE",
year = 2015
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "niki.hartono@u.nus.edu",
password = "Mb241271sd!2")
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
url <- paste0(base_url, "/privateapi/popapi/getEconomicStatus") #list of available options at https://docs.onemap.sg/#population-query
query = list(
token = token,
planningArea = "MARINE PARADE",
year = 2015
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(token = token)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTE5NjkxMSwiZXhwIjoxNjk5NDU2MTExLCJuYmYiOjE2OTkxOTY5MTEsImp0aSI6InVxenIxUzkxcjBTaUlmZXQiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.a1f3UwcnoO1fb2-cbmeAAFgQLMFa_9hF-144DxtH6FY")
data <- GET(url, query = query, verbose()) %>% content()
View(data)
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTE5NjkxMSwiZXhwIjoxNjk5NDU2MTExLCJuYmYiOjE2OTkxOTY5MTEsImp0aSI6InVxenIxUzkxcjBTaUlmZXQiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.a1f3UwcnoO1fb2-cbmeAAFgQLMFa_9hF-144DxtH6FY")
data <- GET(url, query = query, verbose()) %>% content()
View(data)
library(geojsonsf)
base_url <- "https://developers.onemap.sg"
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
query = list(
token = token
)
planning_areas <- GET(url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
library(geojsonsf)
base_url <- "https://developers.onemap.sg"
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
query = list(
token = token
)
planning_areas <- GET(url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
polygon2 <- as.data.frame(polygon)
glimpse(polygon2)
butt <- polygon2 %>%
content(as = "text") %>%
geojson_sf()
butt <- polygon2 %>%
content(as = "text") %>%
geojson_sf()
butt <- polygon2 %>%
geojson_sf()
butt <- polygon %>%
geojson_sf()
library(geojsonsf)
base_url <- "https://developers.onemap.sg"
url <- paste0(base_url, "/publicapi/popapi/getMp14PlanningAreaGeojson")
query = list(
token = token
)
planning_areas <- GET(url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTE5NjkxMSwiZXhwIjoxNjk5NDU2MTExLCJuYmYiOjE2OTkxOTY5MTEsImp0aSI6InVxenIxUzkxcjBTaUlmZXQiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.a1f3UwcnoO1fb2-cbmeAAFgQLMFa_9hF-144DxtH6FY")
data <- GET(url, query = query, verbose()) %>% content()
View(data)
knitr::opts_chunk$set(echo = TRUE)
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "jolene_quek@mymail.sutd.edu.sg",
password = "Jojoquek1") # get an account at https://docs.onemap.sg
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
url <- paste0(base_url, "/privateapi/popapi/getEconomicStatus") #list of available options at https://docs.onemap.sg/#population-query
query = list(
token = token,
planningArea = "MARINE PARADE",
year = 2015
)
data <- GET(url, query = query, verbose()) %>% content()
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(
token = token
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "jolene_quek@mymail.sutd.edu.sg",
password = "Jojoquek1") # get an account at https://docs.onemap.sg
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(
token = token
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
base_url <- "https://developers.onemap.sg"
token_url <- paste0(base_url, "/privateapi/auth/post/getToken")
body <- list(email = "niki.hartono@u.nus.edu",
password = "Mb241271sd!2")
token <- POST(token_url, body = body) %>%
content() %>%
pluck("access_token") # pluck comes from tidyverse
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(
token = token
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTE5NjkxMSwiZXhwIjoxNjk5NDU2MTExLCJuYmYiOjE2OTkxOTY5MTEsImp0aSI6InVxenIxUzkxcjBTaUlmZXQiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.a1f3UwcnoO1fb2-cbmeAAFgQLMFa_9hF-144DxtH6FY"
)
data <- GET(url, query = query, verbose()) %>% content()
View(data)
url <- paste0(base_url, "/publicapi/popapi/getAllEconomicStatus")
query = list(token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTE5NjkxMSwiZXhwIjoxNjk5NDU2MTExLCJuYmYiOjE2OTkxOTY5MTEsImp0aSI6InVxenIxUzkxcjBTaUlmZXQiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.a1f3UwcnoO1fb2-cbmeAAFgQLMFa_9hF-144DxtH6FY")
data <- GET(url, query = query, verbose()) %>% content()
View(data)
view(polygon)
library(jsonlite)
library(dplyr)
library(httr)
library(jsonlite)
library(tidyverse)
library(geojsonsf)
geojson_sf(polygon2,expand_geometries = FALSE, input = NULL)
geojson <- fromJSON(polygon2)
geojson <- fromJSON("polygon2")
geojson <- fromJSON(polygon2)
class(polygon2)
library(jsonlite)
library(dplyr)
library(httr)
library(jsonlite)
library(tidyverse)
library(geojsonsf)
library(sf)
sf_polygon2 <- st_as_sf(polygon2, wkt = "geometry_column_name")
sf_polygon2 <- st_as_sf(polygon2, wkt = "SearchResults.geojson")
SearchResults.geojson$polygon2
polygon2$SearchResults.geojson
geojson(polygon2$SearchResults.geojson)
library(tidyverse)
library(sf)
library(mapview)
library(rvest)
library(httr)
wardsdivsmc <- read_sf(here::here("WardsDivisionsSMCs.kml"))
mapview(wardsdivsmc, zcol = "Name", legend = FALSE)
polygon
planning_areas <- polygon %>%
content(as = "text") %>%
geojson_sf()
library(httr)
polygon <- GET(url, query = query)
library(httr)
polygon <- GET(url, query = query)
stop_for_status(polygon)
library(httr)
polygon <- GET(url, query = query)
content_type(polygon)
planning_areas <- GET(polygon, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
planning_areas <- GET(polygon, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
library(httr)
library(jsonlite)
library(tidyverse)
api_url <- "https://www.onemap.gov.sg/api/public/popapi/getAllPlanningarea?year=2019"
headers <- c(
"Authorization" = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-CA"
)
response <- GET(url = api_url, add_headers(.headers = headers))
polygon <- fromJSON(rawToChar(response$content))
glimpse(polygon)
test <- polygon$SearchResults
]
library(httr)
library(jsonlite)
library(tidyverse)
api_url <- "https://www.onemap.gov.sg/api/public/popapi/getAllPlanningarea?year=2019"
headers <- c(
"Authorization" = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-CA"
)
response <- GET(url = api_url, add_headers(.headers = headers))
polygon <- fromJSON(rawToChar(response$content))
glimpse(polygon)
test <- polygon$SearchResults
test
api_url <- "https://www.onemap.gov.sg/api/public/popapi/getAllPlanningarea?year=2019"
headers <- c(
"Authorization" = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-CA"
)
response <- GET(url = api_url, add_headers(.headers = headers))
planning_areas <- GET(api_url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
api_url <- "https://www.onemap.gov.sg/api/public/popapi/getAllPlanningarea?year=2019"
headers <- c(
"Authorization" = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vaW50ZXJuYWwtYWxiLW9tLXByZGV6aXQtaXQtMTIyMzY5ODk5Mi5hcC1zb3V0aGVhc3QtMS5lbGIuYW1hem9uYXdzLmNvbS9hcGkvdjIvdXNlci9wYXNzd29yZCIsImlhdCI6MTY5OTAxNDM4OCwiZXhwIjoxNjk5MjczNTg4LCJuYmYiOjE2OTkwMTQzODgsImp0aSI6IlFyVXF3Q05qWGJ4eU9XQWMiLCJzdWIiOiI1MGQ0YmJmN2VhYmZmMmExODc3MDg4ZmVmYmYxMDY3NCIsInVzZXJfaWQiOjE1MDUsImZvcmV2ZXIiOmZhbHNlfQ.1BYXESBWvGiHLz0j_WUbTmAT0T-e_0Cws51I2IOW-CA"
)
response <- GET(url = api_url, add_headers(.headers = headers))
planning_areas <- GET(api_url, query = query, verbose()) %>%
content(as = "text") %>%
geojson_sf()
library(jsonlite)
library(dplyr)
library(httr)
library(jsonlite)
library(tidyverse)
library(geojsonsf)
library(sf)
library(mapview)
library(rvest)
library(httr)
planningarea <- read_sf(here::here("PlanningBoundaryArea.kml"))
mapview(planningarea)
bruh <- st_read(dsn = "/Users/nikihartono/Library/Mobile Documents/com~apple~CloudDocs/Documents/1 UNI STUFF/NM2207/GitHub/nokid0ki.github.io/nokid0ki.github.io/MP14_SUBZONE_WEB_PL.shp",
layer = "MP14_SUBZONE_WEB_PL")
bruh <- st_read(dsn = "MP14_SUBZONE_WEB_PL.shp",
layer = "MP14_SUBZONE_WEB_PL")
bruh <- st_read(dsn = "MP14_SUBZONE_WEB_PL.shp",
layer = "MP14_SUBZONE_WEB_PL")
require(rgdal)
shape <- readOGR(dsn = "MP14_SUBZONE_WEB_PL.shp", layer = "MP14_SUBZONE_WEB_PL")
packages = c('sf', 'tmap', 'tidyverse')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
mpsz <- st_read(dsn = "MP14_SUBZONE_WEB_PL",
layer = "MP14_SUBZONE_WEB_PL")
mpsz <- st_read(dsn = "MP14_SUBZONE_WEB_PL.shp",
layer = "MP14_SUBZONE_WEB_PL")
library(tidyverse)
library(sf)
library(mapview)
library(rvest)
library(httr)
gosh <- read_sf(here::here("MasterPlan2019PlanningAreaBoundaryNoSea.kml"))
mapview(gosh)
gosh
library(tidyverse)
library(sf)
library(mapview)
library(rvest)
library(httr)
library(geojsonio)
install.packages("geojsonio")
spdf <- geojson_read("MasterPlan2019PlanningAreaBoundaryNoSea.geojson")
library(geojsonio)
spdf <- geojson_read("MasterPlan2019PlanningAreaBoundaryNoSea.geojson")
install.packages("broom")
library(broom)
spdf_fortified <- tidy(spdf)
# Plot it
library(ggplot2)
ggplot() +
geom_polygon(data = spdf, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void() +
coord_map()
library(sf)
spdf <- st_as_sf(spdf)
library(ggplot2)
library(sf)
spdf <- st_read("MasterPlan2019PlanningAreaBoundaryNoSea.geojson")
ggplot() +
geom_sf(data = spdf, fill = "#69b3a2", color = "white") +
theme_void() +
coord_sf()
topoData <- readLines("MasterPlan2019PlanningAreaBoundaryNoSea.geojson") %>% paste(collapse = "\n")
leaflet() %>% setView(lng = 103.877, lat = 1.27261, zoom = 11) %>%
addTiles() %>%
addTopoJSON(topoData, weight = 1, color = "#444444", fill = FALSE)
omgod <- rgdal::readOGR("MasterPlan2019PlanningAreaBoundaryNoSea.geojson")
install.packages("rgdal")
library(rgdal)
omgod <- rgdal::readOGR("MasterPlan2019PlanningAreaBoundaryNoSea.geojson")
install.packages("rgdal")
library(rgdal)
install.packages("rgdal", type = "source")
library(rgdal)
install.packages("rgdal", type = "source")
geojson <- jsonlite::fromJSON("MasterPlan2019PlanningAreaBoundaryNoSea.geojson")
library("leaflet")
leaflet() %>%
addTiles() %>%
setView(lng = -98.583, lat = 39.833, zoom = 3) %>%
addGeoJSON(geojson)
install.packages("rgdal", type = "source")
geojson <- jsonlite::fromJSON("MasterPlan2019PlanningAreaBoundaryNoSea.geojson")
geojson
mapview(geojson)
helplah <- read_sf(here::here("MasterPlan2019PlanningAreaBoundaryNoSea.kml"))
mapview(helplah)
helplah <- read_sf(here::here("MasterPlan2019PlanningAreaBoundaryNoSea.geojson"))
mapview(helplah)
library(geojsonio)
spdf <- geojson_read("MasterPlan2019PlanningAreaBoundaryNoSea.geojson")
spdf
asdf <- st_read("MasterPlan2019PlanningAreaBoundaryNoSea.geojson") %>%
st_transform(4326) # safety of unprojected CRS
plot(st_geometry(asdf))
sudo apt-get install gdal-bin proj-bin libgdal-dev libproj-dev
install.packages(c('rgdal'),repos = "http://cran.case.edu", configure.args=c("--with-proj-include=/packages/PROJ/6.1.0/include","--with-proj-lib=/packages/PROJ/6.1.0/lib"))
install.packages(c('rgdal'),repos = "http://cran.case.edu", configure.args=c("--with-proj-include=/packages/PROJ/6.1.0/include","--with-proj-lib=/packages/PROJ/6.1.0/lib"))
library(sp)
par(mar=c(0,0,0,0))
plot(spdf, col="grey")
library(sp)
plot(spdf, col="grey")
library(leaflet)
library(ggmap)
install.packages("ggmap")
library(ggmap)
ggmap(spdf)
library(tidyverse)
library(sf)
library(mapview)
library(rvest)
library(httr)
wardsdivsmc <- read_sf(here::here("WardsDivisionsSMCs.kml"))
mapview(wardsdivsmc, zcol = "Name", legend = FALSE)
